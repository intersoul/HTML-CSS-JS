<html>

<head>
    <meta charset="utf-8">
    <title>D3弧线生成器</title>
</head>

<body>

    <script src="d3.v3.min.js" charset="utf-8"></script>
    <script>
        var width = 500;	//SVG绘制区域的宽度
        var height = 500;	//SVG绘制区域的高度	
        var svg = d3.select("body")			//选择<body>
            .append("svg")			//在<body>中添加<svg>
            .attr("width", width)	//设定<svg>的宽度属性
            .attr("height", height);//设定<svg>的高度属性
        var dataset = { startAngle: -Math.PI / 3, endAngle: Math.PI / 3 };
        //创建一个弧生成器
        var arcPath = d3.svg.arc()
            .innerRadius(0)//内半径
            .outerRadius(100);//外半径

        //添加路径
        // 在SVG容器中添加一个路径元素
        svg.append("path")
            // 设置路径的形状，使用arcPath函数生成路径形状，基于给定的dataset数据集
            .attr("d", arcPath(dataset))
            // 对路径元素进行平移变换，将其移动到坐标 (250, 250) 的位置
            .attr("transform", "translate(250,250)")
            // 设置路径的边框颜色为黑色
            .attr("stroke", "black")
            // 设置路径的边框宽度为3像素
            .attr("stroke-width", "1px")
            // 设置路径的填充颜色为蓝色，即路径内部的颜色
            .attr("fill", "blue");

        var dataset1 = { startAngle: -Math.PI / 3, endAngle: Math.PI / 3 };
        //创建一个弧生成器
        var arcPath = d3.svg.arc()
            .innerRadius(0)//内半径
            .outerRadius(100);//外半径
        //创建一个弧生成器
        var arcPath = d3.svg.arc()
            .innerRadius(0)//内半径
            .outerRadius(100);//外半径

        //添加路径
        // 在SVG容器中添加一个路径元素
        svg.append("path")
            // 设置路径的形状，使用arcPath函数生成路径形状，基于给定的dataset数据集
            .attr("d", arcPath(dataset1))
            // 对路径元素进行平移变换，将其移动到坐标 (250, 250) 的位置
            .attr("transform", "translate(425,250)")
            // 设置路径的边框颜色为黑色
            .attr("stroke", "black")
            // 设置路径的边框宽度为3像素
            .attr("stroke-width", "1px")
            // 设置路径的填充颜色为蓝色，即路径内部的颜色
            .attr("fill", "red");
    </script>
    <script>
        // var w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
        // var h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
        // var width = w * 0.98;	//SVG绘制区域的宽度
        // var height = h * 0.96;	//SVG绘制区域的高度			
        var width = 500;	//SVG绘制区域的宽度
        var height = 500;	//SVG绘制区域的高度		
        var svg = d3.select("body")			//选择<body>
            .append("svg")			//在<body>中添加<svg>
            .attr("width", width)	//设定<svg>的宽度属性
            .attr("height", height);//设定<svg>的高度属性

        var dataset = [{ startAngle: 0, endAngle: Math.PI * 0.3 },
        { startAngle: Math.PI * 0.3, endAngle: Math.PI },
        { startAngle: Math.PI, endAngle: Math.PI * 1.5 },
        { startAngle: Math.PI * 1.5, endAngle: Math.PI * 2 }];

        //创建一个弧生成器
        var arcPath = d3.svg.arc()
            .innerRadius(50)
            .outerRadius(100);
        var color = d3.scale.category20();
        //添加路径
        svg.selectAll("path")
            .data(dataset)
            .enter()
            .append("path")
            .attr("d", function (d) { return arcPath(d); })
            .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")")
            .attr("stroke", "black")
            .attr("stroke-width", "2px")
            .attr("fill", function (d, i) { return color(i); });
        //添加文字
        // 选择所有的文本元素，并绑定数据集
        svg.selectAll("text")
            .data(dataset)
            .enter()
            // 对于每个数据创建一个文本元素
            .append("text")
            // 设置文本元素的位置，使用arcPath.centroid(d)来确定文本的位置
            .attr("transform", function (d) {
                return "translate(" + width / 2 + "," + height / 2 + ")" +
                    "translate(" + arcPath.centroid(d) + ")";
            })
            // 设置文本的水平对齐方式为居中
            .attr("text-anchor", "middle")
            // 设置文本颜色为白色
            // .attr("fill", "white")
            .attr("fill", function (d, i) {
                return color(i + 1);
            })
            // 设置文本字体大小为18像素
            .attr("font-size", "18px")
            // 设置文本内容，显示每个部分的角度（以度为单位）
            .text(function (d) { return Math.floor((d.endAngle - d.startAngle) * 180 / Math.PI) + "°"; });

    </script>

</body>

</html>