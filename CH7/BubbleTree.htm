<html>

<head>
    <meta charset="utf-8">
    <style>
        .node {
            stroke: #fff;
            stroke-width: 1.5px;
        }

        .link {
            stroke: #999;
            stroke-opacity: .6;
        }
    </style>
</head>

<body>
    <script src="12.js"></script>
    <script>
        var width = (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) * 0.98;
        var height = (window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight) * 0.9;

        var color = d3.schemeCategory10;

        var forceSimulation = d3.forceSimulation()
            .force("link", d3.forceLink())
            .force("charge", d3.forceManyBody().strength(-100))
            .force("center", d3.forceCenter(width / 2, height / 2));

        var svg = d3.select("body")
            .append("svg")
            .attr("width", width)
            .attr("height", height);
        d3.json("a.json").then(function (graph) {
            //节点数据
            forceSimulation.nodes(graph.nodes)
                .on("tick");
            //生成边数据
            forceSimulation.force("link")
                .links(graph.links)
                .distance(100);


            var link = svg.selectAll(".link")
                .data(graph.links)
                .enter()
                .append("line")
                .attr("class", "link")
                .style("stroke-width", 1);

            var node = svg.selectAll(".node")
                .data(graph.nodes)
                .enter().append("circle")
                .attr("class", "node")
                .attr("r", 16)
                .style("fill", (d, i) => color[i % 10])
                .call(drag());

            forceSimulation.on("tick", () => {
                link
                    .attr("x1", d => d.source.x)
                    .attr("y1", d => d.source.y)
                    .attr("x2", d => d.target.x)
                    .attr("y2", d => d.target.y);

                node
                    .attr("cx", d => d.x)
                    .attr("cy", d => d.y);
            });


            function drag() {

                function dragstarted(event, d) {
                    if (!event.active) forceSimulation.alphaTarget(0.3).restart();
                    d.fx = d.x;
                    d.fy = d.y;
                }

                function dragged(event, d) {
                    d.fx = event.x;
                    d.fy = event.y;
                }

                function dragended(event, d) {
                    if (!event.active) forceSimulation.alphaTarget(0);
                    d.fx = null;
                    d.fy = null;
                }

                return d3.drag()
                    .on("start", dragstarted)
                    .on("drag", dragged)
                    .on("end", dragended);
            }

        });

    </script>
    <!-- Cloudflare Pages Analytics -->
    <script defer src='https://static.cloudflareinsights.com/beacon.min.js'
        data-cf-beacon='{"token": "d912c94599ab449bbf0813bd77f413e8"}'></script><!-- Cloudflare Pages Analytics -->
</body>

</html>